const nodePath=require("path").dirname(require.main.filename),commandLineArgs=require("command-line-args"),CCM=require("./cli-commmand-mapper"),fs=require("fs"),mainDefinitions=[{name:"command",defaultOption:!0},{name:"help",alias:"h",defaultValue:"helpme"}],mainOptions=commandLineArgs(mainDefinitions,{stopAtFirstUnknown:!0}),argv=mainOptions._unknown||[];let cmd=mainOptions.command||!1;function showHelpSection(e,n,o){e&&console.log(`Error: ${e}\n`),DO_TOOL_LOGGING&&o.warn(`Try "${n.cmdAlias} -h" for further information`),0==Object.keys(CCM.cmds).length&&(DO_TOOL_LOGGING&&o.warn('There wasn\'t any commands successfully registered yet. Please make sure you have a folder in your root folder named "cmds" with the following structure: \n\n\t\t    1. With a folder named what you want your command to be, for example if you want a command "test" then just put a folder with the name of "test" in the cmds folder.\n\t\t    2. Then place 2 folders named options.js and run.js into that folder.\n\n\t\t    This should successfully register a command\n'),process.exit());DO_TOOL_LOGGING&&o.warn(`Available commands: \n\n\t\t   - ${Object.keys(CCM.cmds).join("\n\t\t   - ")}\n`),process.exit()}module.exports=async function(e,n,o,t,s="cmds"){let a;try{a=JSON.parse(fs.readFileSync(o).toString())}catch(e){DO_TOOL_LOGGING&&t.critical('The project "config.json" wasn\'t valid json'),process.exit()}if(cmd||showHelpSection("Please provive a command",a,t),null===mainOptions.help)console.log(CCM.getHelpContents(cmd,e,n,a));else if(cmd)try{DO_TOOL_LOGGING&&t.info(CCM.getLogoContents(a),!1,!1),CCM.initCmds(e,n,s),await CCM.run(cmd,t)}catch(e){console.log("Full error: ",e),DO_TOOL_LOGGING&&t.error('ERROR "run.cmd - try catch: '+("string"==typeof e.message?e.message:e)),showHelpSection(void 0,a,t)}else DO_TOOL_LOGGING&&t.info(CCM.getLogoContents(a),!1,!1),showHelpSection(`Command "${cmd}" did not exist`,a)};