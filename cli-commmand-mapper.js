const commandLineArgs=require("command-line-args"),mainDefinitions=[{name:"command",defaultOption:!0},{name:"help",alias:"h",defaultValue:"helpme"}],mainOptions=commandLineArgs(mainDefinitions,{stopAtFirstUnknown:!0}),argv=mainOptions._unknown||[];module.exports={cmds:{},cmdsLoaded:!1,initCmds:function(e,t=[],n="cmds"){const i=require("fs");let s=this;i.readdirSync(e).forEach(o=>{if(!(t.indexOf(`${n}/${o}`)>=0))if(test("-f",`${e}/${o}/run.js`)||test("-f",`${e}/${o}/options.js`)){let t=require(`${e}/${o}/options`);if("list"==t.type){let n=this.getOptions(void 0,t.params),r=[];i.readdirSync(`${e}/${n.cmdGroup}`).forEach(t=>{let i=require(`${e}/${n.cmdGroup}/${t}/options`).params;r.push({cmd:`${n.cmdGroup}:${t}`,options:i,runnable:require(`${e}/${n.cmdGroup}/${t}/run`)})}),s.cmds[o.replace(/_/g,":")]={isListCmd:!0,runnables:r}}else s.cmds[o.replace(/_/g,":")]={isListCmd:!1,cmd:o,options:t.params,runnable:require(`${e}/${o}/run`)}}else i.readdirSync(`${e}/${o}`).forEach(t=>{let n=require(`${e}/${o}/${t}/options`).params;s.setCmdAndExample(n),s.cmds[`${o}:${t}`.replace(/_/g,":")]={isListCmd:!1,cmd:o,options:n,runnable:require(`${e}/${o}/${t}/run`)}})}),this.cmdsLoaded=!0},getLogoContents:function(e){let t="";try{t="\n"+exec(`figlet -w 200 -c '${e.projectName}'`,{silent:!0}).stdout}catch(n){t=`\n\t${e.projectName}\n\n\tTo use ASCI Art logo the please install figlet with "sudo apt-get install figlet"`}return t},setCmdAndExample:function(e){let t="";for(let n of e)t+=n.alias+' "example" ';e.cmd=e.cmd,e.example=t},getHelpContents:function(e,t,n,i){return require(__dirname+"/help")(e,t,n,i)},cmdExists:function(e){return void 0!==this.cmds[e]},getOptions:function(e,t){if(e&&!this.cmdExists(e))throw`Command "${e}" did not exist\n`;let n=mainOptions._unknown||[];if(this.cmdsLoaded){let e=n.indexOf("-g");e>=0&&(n.splice(e+1,1),n.splice(e,1))}return commandLineArgs(null!=t?t:this.cmds[e].options,{argv:n})},run:async function(e,t){if(DO_TOOL_LOGGING&&t.info("CMD TO RUN: ",e),!this.cmdExists(e))throw`Command "${e}" did not exist`;if(this.cmds[e].isListCmd){for(let n of this.cmds[e].runnables){let e=this.getOptions(n.cmd,void 0);await n.runnable(e,t)}return}let n=this.getOptions(e,void 0);await this.cmds[e].runnable(n,t)}};